{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "sources": "contracts",
    "tests": "test",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/ds-test/demo/demo.sol": {
      "lastModificationDate": 1649695496800,
      "contentHash": "06c63e9c41bd610dc11246cab6dc550c",
      "sourceName": "contracts/lib/ds-test/demo/demo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/ds-test/src/test.sol"
      ],
      "versionRequirement": ">=0.4.23",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1649695496800,
      "contentHash": "82a8604fe648c30a9bd56444368704f0",
      "sourceName": "contracts/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/certora/harnesses/ERC20VotesHarness.sol": {
      "lastModificationDate": 1649695498041,
      "contentHash": "b7b0c42a2a4516db2554481d6114d9b8",
      "sourceName": "contracts/lib/openzeppelin-contracts/certora/harnesses/ERC20VotesHarness.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/certora/harnesses/WizardControlFirstPriority.sol": {
      "lastModificationDate": 1649695498041,
      "contentHash": "911a5ac0952a042e83ad35c7fe4c9e24",
      "sourceName": "contracts/lib/openzeppelin-contracts/certora/harnesses/WizardControlFirstPriority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/certora/harnesses/WizardFirstTry.sol": {
      "lastModificationDate": 1649695498041,
      "contentHash": "edc9027dce99d68b46453bcac9eac1ab",
      "sourceName": "contracts/lib/openzeppelin-contracts/certora/harnesses/WizardFirstTry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
      "lastModificationDate": 1649695498042,
      "contentHash": "7417dede8545422ae9c3bb52b6776d61",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/access/AccessControlCrossChain.sol": {
      "lastModificationDate": 1649695498042,
      "contentHash": "2167d540995a2dc23b83ce768ae9a705",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/access/AccessControlCrossChain.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
      "lastModificationDate": 1649695498042,
      "contentHash": "b6d9b165dc57e9ad8153bdca05c783a4",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1649695498042,
      "contentHash": "57c84298234411cea19c7c284d86be8b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "4e71cc90682e109e999ce2bd329f6572",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "8398972af73b4e9e5ff3b31cad86234f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "d63511533e900ee1dafb534f6a69b990",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/amb/CrossChainEnabledAMB.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "ce7763dda3b8cb1fc78f7cc5e46a8e88",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/amb/CrossChainEnabledAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/amb/LibAMB.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/amb/IAMB.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/amb/LibAMB.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "ad951c7d4676df0a85f805b1444c8ac3",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/amb/LibAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/amb/IAMB.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "f84c4128e370b8ab399cd10273436302",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL1.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IBridge.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IInbox.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IMessageProvider.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IOutbox.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "d8680bdb05cd9470a09116a8dc43534c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL2.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IArbSys.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL1.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "6cd113e680aaa114df805a6bb6d650c2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IBridge.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IInbox.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IMessageProvider.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IOutbox.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL2.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "6a8c83cbc9f836539e8dfc3cc72ff822",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IArbSys.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "4406f438ef136ce9bac520e6cfbaeb32",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol": {
      "lastModificationDate": 1649695498043,
      "contentHash": "49cd63284c16bae24745d0451fb1a24d",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/optimism/LibOptimism.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/optimism/ICrossDomainMessenger.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/optimism/LibOptimism.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "6db627be46464d25df3c1f8351a0e752",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/optimism/LibOptimism.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/optimism/ICrossDomainMessenger.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "4c519c56d3799c2d40db2d8f568017cd",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/polygon/IFxMessageProcessor.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/finance/PaymentSplitter.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "6f4509765ae026e31e8e4f0fb8f1f80f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/finance/PaymentSplitter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "23aad8c8999e0f0cb3da962c465bda06",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/finance/VestingWallet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "704ba67ea639567d4c629fd81370c291",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "253cef78c07c46761ea09a3bb539fd8c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/TimelockController.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "ec2796b5e7b752243a277293e3b70086",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/TimelockController.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/GovernorCompatibilityBravo.sol": {
      "lastModificationDate": 1649695498044,
      "contentHash": "d1e73f972df5778f9ed7f3ce0e1cb8b7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/GovernorCompatibilityBravo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "150a6426dc55ba789e76389d6893f908",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "17b1841df1bd03329bf3273a936d0d02",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorPreventLateQuorum.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "2df550b6ced784d89c75dd4d39ac2c0e",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorPreventLateQuorum.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorProposalThreshold.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "badf0ac3dc5335b05d84dab6e58a9d6e",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorProposalThreshold.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "2c6e87fa9b63c7ef8579eb4ae937d4c2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockCompound.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "0d2bff5375901398e300daf4275538da",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockCompound.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/compound/ICompoundTimelock.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "ccc0965f0a4a489e33af78ea22f063eb",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/TimelockController.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "24547728226401db3f959da7974842b7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesComp.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "cf1e8e910900d94fb0957f7b5522a3ec",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesComp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "b346cb21204465106e3d5ea7b6264ee9",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "eebb17e144c4fd58549d815db19552da",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol": {
      "lastModificationDate": 1649695498045,
      "contentHash": "a036d40989f21d08bb990e68d0088fa1",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/governance/utils/Votes.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "8a83b2f5b522505d50f24c78caa7fb70",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/governance/utils/Votes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1155.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "f646f2b291e7c83dcc7f1c6c7d1ece30",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1155MetadataURI.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "bc1c98271c8b14d98b8caf09250dd039",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1155MetadataURI.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1155Receiver.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "a80dbc3947556c57c569cd81aa255f10",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "8fe867b95c856b204f954a1910e28a1e",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "acec8cadeb2b66b07429c854a788a555",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "81d82b92e32be3906f750c8aa081eb09",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "59232bcd69ecd60f9fdc41e435eff762",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1363Spender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "ee9624272968c23d93d4c2e39f06e6e2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1820Implementer.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "b78ff1b7467f49381ceffd0e1c86b821",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1820Implementer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1820Registry.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "fee82324a47df8d208c5389f695afab9",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1820Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "d151fbfe7939989b9acf22797b32058b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "5f6b568ff33d29c2a468a48e4d2bb0f4",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "b9c800c9564415987e98ec4137563e5d",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156.sol": {
      "lastModificationDate": 1649695498046,
      "contentHash": "8a4addf833379ccc6911f847b308332f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "6317d0dd1a63dfc0a295b00173c76f95",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "9e16b4d269b399e8ab6342e0cf8a2edd",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "e6da7798a8c22c5043cc42d64a2a8f80",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721Enumerable.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "ff727125a84ba8d0dd642f6ab0632435",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721Metadata.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "d228683ef3a0f519456720463403ced6",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721Receiver.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "04c99e0f7cc521daff42ecd8e8f14877",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC777.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "6009e31d3e8cbdc6831fc5d43e99701c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC777.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC777Recipient.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "5cb82721cc0841a27ae151e7f7b268e1",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC777Recipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC777Sender.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "e573734b8269ff2e407c505ea6fa4474",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC777Sender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "2858d98e74e67987ec81b39605230b74",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC2612.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "ad2177bf228c4a10bd94423ed7b1c67a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC2612.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "cc84e248c6b15e23709c7b3b60619cf3",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.9",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/metatx/MinimalForwarder.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "09108ffd4f8926d056d6efd660ddde57",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/metatx/MinimalForwarder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/AccessControlCrossChainMock.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "98bb1b3324179d8f08715f6c43d12270",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/AccessControlCrossChainMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControlCrossChain.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL2.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IArbSys.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/AccessControlEnumerableMock.sol": {
      "lastModificationDate": 1649695498047,
      "contentHash": "540e353a94b07ea4fc00e8d7c271da65",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/AccessControlEnumerableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/AccessControlMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "9ab346051c25fc9309e084adc6112888",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/AccessControlMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/AddressImpl.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "521efadbf907d3700ca7378b35bd0c1b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/AddressImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ArraysImpl.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "896807a6030108ad8e8872fceca45a48",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ArraysImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/BadBeacon.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "d821204fbf5f1e3f73a880bc121d3d5a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/BadBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/Base64Mock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "69a0cb2e8b9813ad82e11b37eace779b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/Base64Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Base64.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/BitmapMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "6144ba9e614894591453591ab6fd3287",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/BitmapMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/CallReceiverMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "d8ad0fa6f5cb047fd71030abd436c3d2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/CallReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/CheckpointsImpl.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "ff3f4f084cefc586fbce3a6376c045e7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/CheckpointsImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ClashingImplementation.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "40774f559f6efe4bb93058b32e680c02",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ClashingImplementation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ClonesMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "3c3d897099214ce6223c577dc55d212c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ClonesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ConditionalEscrowMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "63b04414ec27ee252e7e7431785f5a63",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ConditionalEscrowMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/ConditionalEscrow.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ContextMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "719fb67a19e30889dcb3569262f65b85",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ContextMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/CountersImpl.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "2446dbf347ba8cbdaedbde8892514a0a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/CountersImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/Create2Impl.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "cf00427c363da666d4c3041c48fb3039",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/Create2Impl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Create2.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/DoubleEndedQueueMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "40efb3affb38c5f44d92d97361ffd8ee",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/DoubleEndedQueueMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/DummyImplementation.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "23052da0351ecbcd43802845a41fbeef",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/DummyImplementation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ECDSAMock.sol": {
      "lastModificationDate": 1649695498048,
      "contentHash": "89ffe0c0ce25a9fa5e5230f3e756908f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ECDSAMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/EIP712External.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "f3ce57602b397d603d1ab47a289cd8c9",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/EIP712External.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155BurnableMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "81d86936cc90a2e9aef2539052e7bc42",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155BurnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155Mock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "1be5f5c78217fb35b62f121b7d62296c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155PausableMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "5d635e73b1a90f2c04feefb8faa919b4",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155Mock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155ReceiverMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "509f8265587db2c555344f91e2fe5b1d",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155ReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155SupplyMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "b34aa207d4814d7f3e659955620b936c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155SupplyMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155Mock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155URIStorageMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "277d177cc39f3e1aa3801eddc8d86d44",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155URIStorageMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1155Mock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1271WalletMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "d541075f1b02dd2fec14bba2ae153f90",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1271WalletMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165/ERC165InterfacesSupported.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "782e9abe56260a34233eca2d838a5086",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165/ERC165InterfacesSupported.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165/ERC165MissingData.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "f7a435a8acb3f5f0bcf2c8aa87a6ab6b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165/ERC165MissingData.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165/ERC165NotSupported.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "3d6acaa746a431a94963bccd84b1ef76",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165/ERC165NotSupported.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165CheckerMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "185db21182a9486960b8c9368cc69573",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165CheckerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165Mock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "4af581ea8aa2c8845c950d764f220b26",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165StorageMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "5e1f7907867ff274418400e6a41d38a7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC165StorageMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Storage.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1820ImplementerMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "932975c1e28f595457f9621603c95220",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC1820ImplementerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20BurnableMock.sol": {
      "lastModificationDate": 1649695498049,
      "contentHash": "16c0c062fb93e0fc7c60061c16e198bc",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20BurnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20CappedMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "02c66aea2a7fd9cc8807fa7bfcd1f41f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20CappedMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Capped.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20DecimalsMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "5c6681a1c77679d6774b9de58cf5e5d5",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20DecimalsMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20FlashMintMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "6c99fcc05afa7e70515f430992e692ad",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20FlashMintMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20FlashMint.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "afadd2df2b3d63aa4d0f8180932b7b73",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20PausableMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "751b5341b45a270abb1629777a9624ac",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20PermitMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "0e343f28085a0e6583aae67dd967ccce",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20PermitMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20SnapshotMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "d1c6ab468983add875049a57a5485e77",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20SnapshotMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Snapshot.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20VotesCompMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "d5feb91e29eb503d3401af62d360be04",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20VotesCompMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20VotesMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "053434c5bb49ac564e581ceb1181b7e1",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20VotesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20WrapperMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "e2d41de561bf9c27cc7c68f5fbbf9fa9",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20WrapperMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Wrapper.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC2771ContextMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "60d502d8706ff64a4754cbcca07f570f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC2771ContextMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/mocks/ContextMock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.9",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC3156FlashBorrowerMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "f5aaafe8ca151fca303734ce7c7ba8ce",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC3156FlashBorrowerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721BurnableMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "4341e54dc10a462272be888db0ae01c4",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721BurnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721EnumerableMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "574df2bb6f3a5ddc7332729e496ac01b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721EnumerableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721Mock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "777ca2a3777630c7bec2e6dbc9b7055b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721PausableMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "d956d419d6d9abff2fb0fbcb14f5bdae",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721ReceiverMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "6a446429aabded16b45d40ebbbb7f672",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721ReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721RoyaltyMock.sol": {
      "lastModificationDate": 1649695498050,
      "contentHash": "28b7cbbe21cc6c764fd24e88c85d306a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721RoyaltyMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721URIStorageMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "49af10a60f7b5cf77c322f7c002eca81",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721URIStorageMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721VotesMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "51c578f7664980755d8dbf705b965998",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC721VotesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/draft-ERC721Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC777Mock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "3264b51fb51450bf75d97ae95835fc72",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC777Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ERC777SenderRecipientMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "4d1d27e77d4d1c8ac900d7f5a145bd22",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC777SenderRecipientMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/EnumerableMapMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "8f82447f4e0397b57f82830670c29f24",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/EnumerableMapMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/EnumerableSetMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "132727e4f74eb805b03945288864e434",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/EnumerableSetMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "03543c772b5715405d1847fe2a7e6ba4",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/EtherReceiverMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorCompMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "54ce89d4d552d89e625f33c1c148e474",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorCompMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesComp.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorCompatibilityBravoMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "7ff6e9df87add3830b5caa479fac4626",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorCompatibilityBravoMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/GovernorCompatibilityBravo.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockCompound.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesComp.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/compound/ICompoundTimelock.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "45db2c5b7e63a87bac9107752de024e6",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorProposalThreshold.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorPreventLateQuorumMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "2a8108c43a64afcd361d69ff191305cb",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorPreventLateQuorumMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorPreventLateQuorum.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorTimelockCompoundMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "a9d38a78c4b1c4ee9fbdbc9f7208603a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorTimelockCompoundMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockCompound.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/compound/ICompoundTimelock.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorTimelockControlMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "9e92284e6dd1bf2c60690ae8d8af88e8",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorTimelockControlMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/TimelockController.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorSettings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorVoteMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "bc6348e9ab76d49ed079b959f98b2523",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorVoteMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorWithParamsMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "944ff9ddab4ac57f2c36a21abff1f723",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/GovernorWithParamsMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/InitializableMock.sol": {
      "lastModificationDate": 1649695498051,
      "contentHash": "db212ed8060304f7070e5309501532c3",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/InitializableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/MathMock.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "c6fa84338b2c086355768de38de69118",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/MathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/MerkleProofWrapper.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "e2d20bbf9dab03473dba10ab60563e57",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/MerkleProofWrapper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/MulticallTest.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "0471bdc492e4d2505a3e89478217a62a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/MulticallTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/mocks/MulticallTokenMock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Multicall.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/MulticallTokenMock.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "f3d490698b1a7cdcf440f9d64eca2c57",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/MulticallTokenMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/mocks/ERC20Mock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Multicall.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/MultipleInheritanceInitializableMocks.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "92983a5e9a4d6baa9fa2655f068867f5",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/MultipleInheritanceInitializableMocks.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/OwnableMock.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "3115355f79ef5589879d1bd20de82b32",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/OwnableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/PausableMock.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "a5683047c5c3ab9159768ea312956fc6",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/PausableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/PullPaymentMock.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "adf7049bf6c48f7c5fe7681ed4f2bd54",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/PullPaymentMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/PullPayment.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "365700b7d522712a4b8df63604a1f9df",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/ReentrancyMock.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "318e72355ec39e830288ec04dc4c76a7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/ReentrancyMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/mocks/ReentrancyAttack.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/RegressionImplementation.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "427d4c71d64926b9de5d60e5686380bf",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/RegressionImplementation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/SafeCastMock.sol": {
      "lastModificationDate": 1649695498052,
      "contentHash": "88d508f23615100bb2d5df5154d18112",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/SafeCastMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/SafeERC20Helper.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "5362a3542ec64517ea78e12d11d94f33",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/SafeERC20Helper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/SafeMathMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "0f2e411c240cab2951bf7856ffe04b98",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/SafeMathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/SignatureCheckerMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "3d0fda24d5d77624d5a7b158a6762681",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/SignatureCheckerMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/SignedMathMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "308d0dce452ce69f428e742968d1adc2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/SignedMathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/SignedSafeMathMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "c0abc8207b2fe94f7e6e14bc8f32e130",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/SignedSafeMathMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SignedSafeMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/SingleInheritanceInitializableMocks.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "a0f7ac0b67fdf84c854701706691731e",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/SingleInheritanceInitializableMocks.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/StorageSlotMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "681082aac12d55520958e456fe2a8850",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/StorageSlotMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/StringsMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "576c5673181da7bea96fde42342a6e41",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/StringsMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/TimersBlockNumberImpl.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "251e6f75ef0655071e414aa17f406ef0",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/TimersBlockNumberImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/TimersTimestampImpl.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "4da7cc0f188c4b4b0571dd3741158dd0",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/TimersTimestampImpl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/UUPS/UUPSLegacy.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "aa65be99dff42d67f13f46a97c8f5b47",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/UUPS/UUPSLegacy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/mocks/CountersImpl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/mocks/UUPS/UUPSUpgradeableMock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/UUPS/UUPSUpgradeableMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "d61a2048368cbcaf9dd1b9cfa383987a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/UUPS/UUPSUpgradeableMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/mocks/CountersImpl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/VotesMock.sol": {
      "lastModificationDate": 1649695498053,
      "contentHash": "bd5c2352015a3953b6ec7532d85bcd48",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/VotesMock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/compound/CompTimelock.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "fd7ad8322337afa2448279b3c8c88b3b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/compound/CompTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/crosschain/bridges.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "c8545d2e6348390d9b0e43c1b612364e",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/crosschain/bridges.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/polygon/IFxMessageProcessor.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/crosschain/receivers.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "fe0f8e2c2115a7f381ea427d69b3cf55",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/crosschain/receivers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/CrossChainEnabled.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/amb/CrossChainEnabledAMB.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/amb/LibAMB.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL1.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/CrossChainEnabledArbitrumL2.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL1.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/arbitrum/LibArbitrumL2.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/errors.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/optimism/CrossChainEnabledOptimism.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/optimism/LibOptimism.sol",
        "contracts/lib/openzeppelin-contracts/contracts/crosschain/polygon/CrossChainEnabledPolygonChild.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/amb/IAMB.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IArbSys.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IBridge.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IInbox.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IMessageProvider.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IOutbox.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/optimism/ICrossDomainMessenger.sol",
        "contracts/lib/openzeppelin-contracts/contracts/vendor/polygon/IFxMessageProcessor.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/wizard/MyGovernor1.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "aee784c515ed752a3028c77aacfe94fe",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/wizard/MyGovernor1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/TimelockController.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/wizard/MyGovernor2.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "c6df239ecee0f2179eb306643bfb0774",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/wizard/MyGovernor2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/TimelockController.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorCountingSimple.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorProposalThreshold.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/mocks/wizard/MyGovernor3.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "da0bb04a6c63bed9771a552cfb0a6eec",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/mocks/wizard/MyGovernor3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/Governor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/IGovernor.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/TimelockController.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/GovernorCompatibilityBravo.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/compatibility/IGovernorCompatibilityBravo.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorTimelockControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/GovernorVotesQuorumFraction.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/extensions/IGovernorTimelock.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "fbd54d0ecbc75d25a2f268e36e9b6553",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "lastModificationDate": 1649695498054,
      "contentHash": "524a6c6f00b809b1184050dcc9e131d8",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "6baa887a798e95b14f34e093f117e9b2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "138f3b0ab82dcb14bea53dda28567b5a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "0d71075819600720f2c99ed4b31d88e0",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "b6bd23bf19e90b771337037706470933",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "8ffefb755605824cf730ce4092b2f581",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "a947492251ac15d6bfd899c9fdb4d82b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "433af24ebe64e49e21ea173b3744af6c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1649695498055,
      "contentHash": "99a138fd303b4a2ac2f1c5d0b5f8e0e1",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1649695498056,
      "contentHash": "5e95368c9b763cfa31ba0fe1309acc60",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "contracts/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
      "lastModificationDate": 1649695498056,
      "contentHash": "9c2dccab8e3a43a18c41e358763fe4d8",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/security/PullPayment.sol": {
      "lastModificationDate": 1649695498056,
      "contentHash": "43e2639a67e1d791ff6e877e8b602669",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/security/PullPayment.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
      "lastModificationDate": 1649695498056,
      "contentHash": "92f9448b23a90ea3bb932ee55cc3ccce",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
      "lastModificationDate": 1649695498056,
      "contentHash": "65af2f5ee219eafd1953326f817438a5",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "59e1bc5713fdebc7f821dc52f4d3e0ef",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "9f8822b72fe2702979e40160cb6d9636",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "b9f23167c71a0ebb43ef5915b463a264",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Pausable.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "8c76f015a31a093020b83ba53a33c84d",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "d87985fd28df5209cfe58ae59588d4f2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "6a6c67c2576d2a013ede9f4f1f756ae2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155URIStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "9148c2e10c4efb12c71a7f080da5559b",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "ce9333438d295d2c4bebc7951ad33d93",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/ERC1155Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
      "lastModificationDate": 1649695498057,
      "contentHash": "88079762e28b246888129028f757e047",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "55b180cf664783e9a2baac20e82683fb",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "cfaa86ed9df3a86f57ca96690deea3b7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "dfa2ddd358a44b4a8c28096c181d3169",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "a1c7f80ae26f5b2d7d563475627fbf25",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Capped.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "da89e343119284763a5a135243cdb338",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Capped.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20FlashMint.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "db925a27ce48b0fc3bf956a0c97cfbdf",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20FlashMint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol",
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashLender.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "ab4babe7912604097ae769a62fa08506",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Snapshot.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "63a162d781cbeab0d1a7c7f54e53c3f0",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Snapshot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol": {
      "lastModificationDate": 1649695498058,
      "contentHash": "d750921452f3bf2ab170f55cf4f5dc71",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "85de097d4da905cf320e89d73840291a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20VotesComp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Wrapper.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "195928f9697fc31c3dc03083b1a937dd",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Wrapper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "909ab67fc5c25033fe6cd364f8c056f9",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "0ff874b2f35037c2eb9220665597caa5",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "fb77f144244b9ab12533aa6ce85ef8c5",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "d4d35c0977f3c87ab399a75a45d6fc19",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "ca6cd8d752c4e75efa2a15734be0cb94",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "76814c83c32552ed2b521c816b4d801a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol": {
      "lastModificationDate": 1649695498059,
      "contentHash": "5d2b54b53436cb1d51e9aed8f2b27982",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/TokenTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "3529a8ec918ca72e2ed5707d186b5b30",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "dba3fb6ccaa3eac2da0b33d09b6c4a74",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "4a42975c8e0c64414a9462122137e990",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "6c1feda9e979559590652376124ff17e",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "88095889e59d16821879a8083f906503",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "2bc2d361b7e7bda979021da66e1696af",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "538c93f1c25e40421fbe0c2c820c2fbe",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "39f6aecea6bd43c9f25d96ed56221131",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "f4dd06783f321aa26179bc2b6e361c29",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "efbc0d15b80a74e34dbe8da0f3e879bb",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/draft-ERC721Votes.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "a5f5fe7428bf2a0718a58cd89b352da3",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/draft-ERC721Votes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/IVotes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/governance/utils/Votes.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol": {
      "lastModificationDate": 1649695498060,
      "contentHash": "27d2c7c209f2fae42c6b90832f2669aa",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "contracts/lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Pausable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "54062ff887823a306b33ea6494a220bc",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "5198263fcc10f07a02eac2d34d62dedc",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "d523a9a60ebcfee8dc7bd77effcae2e8",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "268af1696d7a83a7e78a1a8f5ba1c685",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "7c1ce5bc5bc5f57fe7106ba767063e08",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/ERC777/presets/ERC777PresetFixedSupply.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "cf632c608a0fc89ebfcd9870cb7e6ca2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/presets/ERC777PresetFixedSupply.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/ERC777.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "contracts/lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "ee96a960b18421a2a36174a427086d7f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "ad714a6368ee7d43cded6bbe8af0b155",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Arrays.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "2bd89f9eb95c317b3b21cc83fde01a32",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Arrays.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Base64.sol": {
      "lastModificationDate": 1649695498061,
      "contentHash": "077d9664b0b4a2fd2033cea2663530f4",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Base64.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "6986896416b1f89cb9ddd3bafe0bf8d1",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Checkpoints.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "74654e3ae5d7f39555055dfe244dab7a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Counters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "1f0346d0da642d65cfb74f9241cc7683",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Create2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Multicall.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "8a997d859de7e871118021136bb5094e",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Multicall.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "187a01c1e4e638014509dfee3ac6faa9",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "9c54c6c065d9e590fdcdd72c451425b9",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "ae135102abee8b2fc88eed09a40cdb4c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/Timers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "482bcc512029ecf51ca4ae85cf4667c7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "b2d1ac0bec7a8df12c3bf0d51d4b2dca",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
      "lastModificationDate": 1649695498062,
      "contentHash": "a6c043c18ceaf0499c284c8b65b313f4",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "161aae4dc1450371d0f324488f66a9cf",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/escrow/ConditionalEscrow.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "ed8802b28f8eab3257dc05b5b09e5c5d",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/ConditionalEscrow.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "d0b182675ed7481cb6e1a1a226a47f0f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/escrow/RefundEscrow.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "aee62e265ecc9a3b5f03a79e34b89158",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/RefundEscrow.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/ConditionalEscrow.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/escrow/Escrow.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "1abe3767b27223b96a265645cb2a56e3",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Storage.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "a391733d3f579314de328ba879bc4f2d",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Storage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "267e2fa54d5923930fc121c178403487",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/ERC1820Implementer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "0612f1c8beee4b227de51b49174b9bc2",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Implementer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "e98ac8f1f8176d2ac7a8991cc22aa207",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "339b9793dcbd7b5d55af725ef47de74c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "cd91252bfcbee6eaba8f5144f504583c",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
      "lastModificationDate": 1649695498063,
      "contentHash": "e443d68643e5a5d3f430424933ba71cf",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "226875d0edb508420f74e7a1c2786ad8",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/math/SignedSafeMath.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "f7b3809e202b5547e9ddd97aaeb1d907",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/math/SignedSafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "a4862458388199138bffd4fa18f6c8ba",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/structs/BitMaps.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "8619136e909dc709b8fd04b531a05bfa",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/structs/DoubleEndedQueue.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "ebce11732c1524b4df91c44102688cc0",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "bb602c94c112a1504c54f73ba6b01ec7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/amb/IAMB.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "61c294aaff645157f3a24c0b7e9a4cec",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/amb/IAMB.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IArbSys.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "ab9c4a29b9f65f3accf8badcb2d444a7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IArbSys.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.21, <0.9.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IBridge.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "a2e7bb8dce3cd190d802a34e866ebc51",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IInbox.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "5a1d490bcd76bd542f49d1e585455ff7",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IInbox.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IMessageProvider.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IMessageProvider.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "635d13f8821b1f146c15c14274d22d1f",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IMessageProvider.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IOutbox.sol": {
      "lastModificationDate": 1649695498064,
      "contentHash": "5c13cf420ff4dbafbeb56732c95d7483",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/arbitrum/IOutbox.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/compound/ICompoundTimelock.sol": {
      "lastModificationDate": 1649695498065,
      "contentHash": "9acf0c17b7bdb02ebe521c9ddc284c55",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/compound/ICompoundTimelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/optimism/ICrossDomainMessenger.sol": {
      "lastModificationDate": 1649695498065,
      "contentHash": "ef1dd453b1366924a9e989d483999c01",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/optimism/ICrossDomainMessenger.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">0.5.0, <0.9.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/openzeppelin-contracts/contracts/vendor/polygon/IFxMessageProcessor.sol": {
      "lastModificationDate": 1649695498065,
      "contentHash": "c9c277f5d491e9e8e373b81084220cf1",
      "sourceName": "contracts/lib/openzeppelin-contracts/contracts/vendor/polygon/IFxMessageProcessor.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/lib/ds-test/demo/demo.sol": {
      "lastModificationDate": 1649695505142,
      "contentHash": "06c63e9c41bd610dc11246cab6dc550c",
      "sourceName": "contracts/lib/solmate/lib/ds-test/demo/demo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/lib/ds-test/src/test.sol"
      ],
      "versionRequirement": ">=0.4.23",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1649695505142,
      "contentHash": "82a8604fe648c30a9bd56444368704f0",
      "sourceName": "contracts/lib/solmate/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/auth/Auth.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "76a634d0a382819537ecf118eb247a84",
      "sourceName": "contracts/lib/solmate/src/auth/Auth.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/auth/authorities/MultiRolesAuthority.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "faa75c9721f7f8cbf2297b57a0ed1063",
      "sourceName": "contracts/lib/solmate/src/auth/authorities/MultiRolesAuthority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/auth/authorities/RolesAuthority.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "0e9becf5bafcaa49f61397c21eb67176",
      "sourceName": "contracts/lib/solmate/src/auth/authorities/RolesAuthority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/mixins/ERC4626.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "62984973a3cac8133d3d3f4a82718aff",
      "sourceName": "contracts/lib/solmate/src/mixins/ERC4626.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/utils/FixedPointMathLib.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/Auth.t.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "085f386d21006c24c0368975ef4aacf8",
      "sourceName": "contracts/lib/solmate/src/test/Auth.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockAuthChild.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockAuthority.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/Bytes32AddressLib.t.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "c49f83cdccf3b5128db5e40f87dddf08",
      "sourceName": "contracts/lib/solmate/src/test/Bytes32AddressLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/utils/Bytes32AddressLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/CREATE3.t.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "8b3931880c37e61fd8c0ceef236f59bb",
      "sourceName": "contracts/lib/solmate/src/test/CREATE3.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockAuthChild.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/tokens/WETH.sol",
        "contracts/lib/solmate/src/utils/Bytes32AddressLib.sol",
        "contracts/lib/solmate/src/utils/CREATE3.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/DSTestPlus.t.sol": {
      "lastModificationDate": 1649695502173,
      "contentHash": "90b5490654670f2d0f45c64cd0628123",
      "sourceName": "contracts/lib/solmate/src/test/DSTestPlus.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/ERC1155.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "4379ddfd5c03aba92c4c4fa95c32ab47",
      "sourceName": "contracts/lib/solmate/src/test/ERC1155.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSInvariantTest.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockERC1155.sol",
        "contracts/lib/solmate/src/test/utils/users/ERC1155User.sol",
        "contracts/lib/solmate/src/tokens/ERC1155.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/ERC20.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "b61756595a684dafd72be565751548de",
      "sourceName": "contracts/lib/solmate/src/test/ERC20.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSInvariantTest.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "contracts/lib/solmate/src/test/utils/users/ERC20User.sol",
        "contracts/lib/solmate/src/tokens/ERC20.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/ERC4626.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "0d5fdfae58cd092210abffa61775019c",
      "sourceName": "contracts/lib/solmate/src/test/ERC4626.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/mixins/ERC4626.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockERC4626.sol",
        "contracts/lib/solmate/src/test/utils/users/ERC20User.sol",
        "contracts/lib/solmate/src/test/utils/users/ERC4626User.sol",
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/utils/FixedPointMathLib.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/ERC721.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "2ad2e2b7cfbcacb1b439515cf18dd30c",
      "sourceName": "contracts/lib/solmate/src/test/ERC721.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSInvariantTest.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockERC721.sol",
        "contracts/lib/solmate/src/test/utils/users/ERC721User.sol",
        "contracts/lib/solmate/src/tokens/ERC721.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/FixedPointMathLib.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "3a091b4974ff8aa7d4dc18caa6b7b746",
      "sourceName": "contracts/lib/solmate/src/test/FixedPointMathLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/utils/FixedPointMathLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/MultiRolesAuthority.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "44dde1944e8393a41c24249ef186f4cc",
      "sourceName": "contracts/lib/solmate/src/test/MultiRolesAuthority.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol",
        "contracts/lib/solmate/src/auth/authorities/MultiRolesAuthority.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockAuthority.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/ReentrancyGuard.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "607d57ae5203e7620588783d2a9210a7",
      "sourceName": "contracts/lib/solmate/src/test/ReentrancyGuard.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/utils/ReentrancyGuard.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/RolesAuthority.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "7b03ad6f90c4d7dac1c7350a86b22341",
      "sourceName": "contracts/lib/solmate/src/test/RolesAuthority.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol",
        "contracts/lib/solmate/src/auth/authorities/RolesAuthority.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockAuthority.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/SSTORE2.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "90bb8c84ea77e945cceeb4e396540f52",
      "sourceName": "contracts/lib/solmate/src/test/SSTORE2.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/utils/SSTORE2.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/SafeCastLib.t.sol": {
      "lastModificationDate": 1649695502174,
      "contentHash": "dfe76c51111b6dbb5c5272720711eb66",
      "sourceName": "contracts/lib/solmate/src/test/SafeCastLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/utils/SafeCastLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/SafeTransferLib.t.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "61dc271c95b209a67bdc4279105e9738",
      "sourceName": "contracts/lib/solmate/src/test/SafeTransferLib.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
        "contracts/lib/solmate/src/test/utils/weird-tokens/MissingReturnToken.sol",
        "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsFalseToken.sol",
        "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsGarbageToken.sol",
        "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTooLittleToken.sol",
        "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTooMuchToken.sol",
        "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTwoToken.sol",
        "contracts/lib/solmate/src/test/utils/weird-tokens/RevertingToken.sol",
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/WETH.t.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "858a64d7af5aef903bc95e37a883b8ec",
      "sourceName": "contracts/lib/solmate/src/test/WETH.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/DSInvariantTest.sol",
        "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
        "contracts/lib/solmate/src/test/utils/Hevm.sol",
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/tokens/WETH.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": "=0.8.10",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/DSInvariantTest.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "eef63c069b48071868fdcbd7c8402136",
      "sourceName": "contracts/lib/solmate/src/test/utils/DSInvariantTest.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/DSTestPlus.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "828799197fc0e217858c5744d10186f5",
      "sourceName": "contracts/lib/solmate/src/test/utils/DSTestPlus.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/test/utils/Hevm.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/Hevm.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "60742aa83f930a4226fbe7676f06b607",
      "sourceName": "contracts/lib/solmate/src/test/utils/Hevm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/mocks/MockAuthChild.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "5e8712a25c5ee4c824b29f5f27f4c529",
      "sourceName": "contracts/lib/solmate/src/test/utils/mocks/MockAuthChild.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/mocks/MockAuthority.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "68019347f0b6ff9b370a6518d954f84a",
      "sourceName": "contracts/lib/solmate/src/test/utils/mocks/MockAuthority.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/auth/Auth.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/mocks/MockERC1155.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "27fbb8a9833bf2f80f08f2ad4ba2b378",
      "sourceName": "contracts/lib/solmate/src/test/utils/mocks/MockERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC1155.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "8cec77cb7dcd2d03e318bc0916a925f3",
      "sourceName": "contracts/lib/solmate/src/test/utils/mocks/MockERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/mocks/MockERC4626.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "1e11a504dee96cf1fd4240fa268ab00f",
      "sourceName": "contracts/lib/solmate/src/test/utils/mocks/MockERC4626.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/mixins/ERC4626.sol",
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/utils/FixedPointMathLib.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/mocks/MockERC721.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "f8515741f4deb2aca669adad254532f3",
      "sourceName": "contracts/lib/solmate/src/test/utils/mocks/MockERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC721.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/users/ERC1155User.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "73bf79cd5226264c039b428550e74dd3",
      "sourceName": "contracts/lib/solmate/src/test/utils/users/ERC1155User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC1155.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/users/ERC20User.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "cba2ff7c3014af2397d2d26652388940",
      "sourceName": "contracts/lib/solmate/src/test/utils/users/ERC20User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/users/ERC4626User.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "f702cfe34bcf05eea659e60c3a697e3a",
      "sourceName": "contracts/lib/solmate/src/test/utils/users/ERC4626User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/mixins/ERC4626.sol",
        "contracts/lib/solmate/src/test/utils/users/ERC20User.sol",
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/utils/FixedPointMathLib.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/users/ERC721User.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "9e4d1e01806cd93a1d3c067adbe585ef",
      "sourceName": "contracts/lib/solmate/src/test/utils/users/ERC721User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC721.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/users/GenericUser.sol": {
      "lastModificationDate": 1649695502175,
      "contentHash": "7ec8e26e98972ce6397baf76eeeab0e2",
      "sourceName": "contracts/lib/solmate/src/test/utils/users/GenericUser.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/weird-tokens/MissingReturnToken.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "50a051edf0514e8a5e9a9e78739d0918",
      "sourceName": "contracts/lib/solmate/src/test/utils/weird-tokens/MissingReturnToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsFalseToken.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "944735fc60ebedc77e48ad844fe45f6e",
      "sourceName": "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsFalseToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsGarbageToken.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "aa847d1910d090e3f8f55498ef20d4ff",
      "sourceName": "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsGarbageToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTooLittleToken.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "509dbd437041bed386031be39eaa7ff9",
      "sourceName": "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTooLittleToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTooMuchToken.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "f15e97b16f439f9bc58ea9a235a60071",
      "sourceName": "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTooMuchToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTwoToken.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "43037f1a603a621915bd82997266b945",
      "sourceName": "contracts/lib/solmate/src/test/utils/weird-tokens/ReturnsTwoToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/test/utils/weird-tokens/RevertingToken.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "a4ab5c69ff50a6b8610b65f261fda4a9",
      "sourceName": "contracts/lib/solmate/src/test/utils/weird-tokens/RevertingToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/tokens/ERC1155.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "0f01131c8e9d81731a3655fb884c3231",
      "sourceName": "contracts/lib/solmate/src/tokens/ERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/tokens/ERC20.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "a0b1801a2ffe030a0f4ff4d508ceb74f",
      "sourceName": "contracts/lib/solmate/src/tokens/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/tokens/ERC721.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "224006de5bf59fbbf155dcaac8c3a955",
      "sourceName": "contracts/lib/solmate/src/tokens/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/tokens/WETH.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "2733bec88cad581f6c741648867c56be",
      "sourceName": "contracts/lib/solmate/src/tokens/WETH.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC20.sol",
        "contracts/lib/solmate/src/utils/SafeTransferLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/utils/Bytes32AddressLib.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "ddd87074ddd1ee3170894b8db65f7709",
      "sourceName": "contracts/lib/solmate/src/utils/Bytes32AddressLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/utils/CREATE3.sol": {
      "lastModificationDate": 1649695502176,
      "contentHash": "e2db4526317c77c14fea570132a90ad2",
      "sourceName": "contracts/lib/solmate/src/utils/CREATE3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/utils/Bytes32AddressLib.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/utils/FixedPointMathLib.sol": {
      "lastModificationDate": 1649695502177,
      "contentHash": "7632bbc2b75ea340edf63e6fd99362a2",
      "sourceName": "contracts/lib/solmate/src/utils/FixedPointMathLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/utils/ReentrancyGuard.sol": {
      "lastModificationDate": 1649695502177,
      "contentHash": "7c96522a6b8a885ee3c3f6df549ac9b8",
      "sourceName": "contracts/lib/solmate/src/utils/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/utils/SSTORE2.sol": {
      "lastModificationDate": 1649695502177,
      "contentHash": "aba8f92d4a5e0bedab816e47bfe8be62",
      "sourceName": "contracts/lib/solmate/src/utils/SSTORE2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/utils/SafeCastLib.sol": {
      "lastModificationDate": 1649695502177,
      "contentHash": "680ddfaaf8d1e494b52a29e6d4dba604",
      "sourceName": "contracts/lib/solmate/src/utils/SafeCastLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/lib/solmate/src/utils/SafeTransferLib.sol": {
      "lastModificationDate": 1649695502177,
      "contentHash": "d3463dad9847f40c3096875013f44c3f",
      "sourceName": "contracts/lib/solmate/src/utils/SafeTransferLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/lib/solmate/src/tokens/ERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/src/MerkleClaimERC20.sol": {
      "lastModificationDate": 1649693926374,
      "contentHash": "822ff94b6d7b579c4650884baac6121f",
      "sourceName": "contracts/src/MerkleClaimERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/src/MerkleClaimERC721.sol": {
      "lastModificationDate": 1649747631058,
      "contentHash": "4edd37f6fe2106a1dfea2746f27d06aa",
      "sourceName": "contracts/src/MerkleClaimERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/src/test/MerkleClaimERC20.t.sol": {
      "lastModificationDate": 1649693926374,
      "contentHash": "3b8b53050e6be6e01b220ba55e316011",
      "sourceName": "contracts/src/test/MerkleClaimERC20.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/src/MerkleClaimERC20.sol",
        "contracts/src/test/utils/MerkleClaimERC20Test.sol",
        "contracts/src/test/utils/MerkleClaimERC20User.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/src/test/utils/MerkleClaimERC20Test.sol": {
      "lastModificationDate": 1649693926375,
      "contentHash": "56838abd8c55f0570afe83ed2ff8853a",
      "sourceName": "contracts/src/test/utils/MerkleClaimERC20Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/src/MerkleClaimERC20.sol",
        "contracts/src/test/utils/MerkleClaimERC20User.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    },
    "/Users/sorxcode/Muse/Web3Bridge/merkle-airdrop-starter/contracts/src/test/utils/MerkleClaimERC20User.sol": {
      "lastModificationDate": 1649693926375,
      "contentHash": "7f3288da093259fb6d0f5f5251c952de",
      "sourceName": "contracts/src/test/utils/MerkleClaimERC20User.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs"
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers"
              ]
            }
          },
          "evmVersion": "london"
        }
      },
      "imports": [
        "contracts/src/MerkleClaimERC20.sol"
      ],
      "versionRequirement": ">=0.8.0",
      "artifacts": {}
    }
  }
}